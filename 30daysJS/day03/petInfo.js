/*
En este desaf√≠o recibir√°s una serie de tipos de mascotas junto con su edad.
Dependiendo de estos 2 factores tendr√°s que construir la funci√≥n llamada¬†getPetExerciseInfo¬†la cual retornar√° una cadena de texto con la informaci√≥n necesaria acerca de cuanto ejercicio necesita hacer cada tipo de mascota.
La funci√≥n recibir√° las siguientes mascotas:
    ‚Ä¢ perro
    ‚Ä¢ gato
    ‚Ä¢ ave
En caso de pasar una mascota la cual no sea de la lista deber√° retornar "Tipo de mascota inv√°lida"
Para cada tipo de mascota, la funci√≥n retornar√° diferente informaci√≥n basada en la edad.
    ‚Ä¢ Perros
        ‚ó¶ Si la edad es menor al a√±o, deber√° retornar "Los cachorros necesitan peque√±as y frecuentes sesiones de juego"
        ‚ó¶ Si la edad es entre 1 y 7 a√±os, deber√° retornar "Los perros a esta edad necesitan caminatas diarias y sesiones de juego"
        ‚ó¶ Si la edad es mayor a 7 a√±os, deber√° retornar "Los perros viejos necesitan caminatas m√°s cortas"
    ‚Ä¢ gatos
        ‚ó¶ Si la edad es menor al a√±o, deber√° retornar "Los gatitos necesitan frecuentes sesiones de juego"
        ‚ó¶ Si la edad es entre 1 y 7 a√±os, deber√° retornar "Los gatos a esta edad necesitan jugar diariamente"
        ‚ó¶ Si la edad es mayor a 7 a√±os, deber√° retornar "Los gatos viejos necesitan sesiones de juego m√°s cortas"
    ‚Ä¢ aves
        ‚ó¶ Si la edad es menor al a√±o, deber√° retornar "Las aves j√≥venes necesitan mucho espacio para volar"
        ‚ó¶ Si la edad es entre 1 y 7 a√±os, deber√° retornar "Las aves necesitan jugar diariamente y un lugar para volar"
        ‚ó¶ Si la edad es mayor a 7 a√±os, deber√° retornar "Las aves mayores necesitan descansar m√°s, pero siguen ocupando un lugar para volar"
Tendr√°s inputs y outputs como los siguientes üëá
Ejemplo 1:
Input: getPetExerciseInfo("perro", 3)
Output: "Los perros a esta edad necesitan caminatas diarias y sesiones de juego"
Ejemplo 2:
Input: getPetExerciseInfo("gato", 8)
Output: "Los gatos viejos necesitan sesiones de juego m√°s cortas"
Ejemplo 3:
Input: getPetExerciseInfo("Mamut", 25)
Output: "Tipo de mascota invalida"
*/

export function getPetExerciseInfo(type, age) {
    // Tu C√≥digo aqu√≠ üëà
    switch (type) {
        case "perro":
            if (age > 0 && age < 1) {
                console.log("Los cachorros necesitan peque√±as y frecuentes sesiones de juego")
            } else if (age >= 1 && age < 7) {
                console.log("Los perros a esta edad necesitan caminatas diarias y sesiones de juego")
            } else if (age >= 7) {
                console.log("Los perros viejos necesitan caminatas m√°s cortas")
            } else {
                console.log("Invalid Age")
            }
            break;
        case "gato":
            if (age > 0 && age < 1) {
                console.log("Los gatitos necesitan frecuentes sesiones de juego")
            } else if (age >= 1 && age < 7) {
                console.log("Los gatos a esta edad necesitan jugar diariamente")
            } else if (age >= 7) {
                console.log("Los gatos viejos necesitan sesiones de juego m√°s cortas")
            } else {
                console.log("Invalid Age")
            }
            break;
        case "aves":
            if (age > 0 && age < 1) {
                console.log("Las aves j√≥venes necesitan mucho espacio para volar")
            } else if (age >= 1 && age < 7) {
                console.log("Las aves necesitan jugar diariamente y un lugar para volar")
            } else if (age >= 7) {
                console.log("Las aves mayores necesitan descansar m√°s, pero siguen ocupando un lugar para volar")
            } else {
                console.log("Invalid Age")
            }
            break;
        default:
            console.log("Tipo de mascota invalida")
            break;
    }
}

getPetExerciseInfo("perro", 3)
getPetExerciseInfo("gato", 8)
getPetExerciseInfo("Mamut", 25)