/*Clase 20 â€“ Buscador de palÃ­ndromos â€“ DÃ­a 5
En este desafÃ­o, debes crear una funciÃ³n que encuentre el palÃ­ndromo mÃ¡s largo en una lista de palabras.
RecibirÃ¡s un Ãºnico parÃ¡metro: un array de palabras. Si no hay ningÃºn palÃ­ndromo en la lista, la funciÃ³n debe devolverÂ null. Si hay mÃ¡s de un palÃ­ndromo con la misma longitud mÃ¡xima, debes devolver el primer palÃ­ndromo encontrado en la lista.
Un palÃ­ndromo es una palabra que se puede leer de la misma manera tanto hacia adelante como hacia atrÃ¡s.
Ejemplo 1:
Input: findLargestPalindrome(["racecar", "level", "world", "hello"])

Output: "racecar"
Ejemplo 2:
Input: findLargestPalindrome(["Platzi", "javascript", "html", "css"])

Output: null
*/

export function findLargestPalindrome(words) {
    // Tu cÃ³digo aquÃ­ ðŸ‘ˆ
    let result = []
    let output = ''
    let reversedWords = words.map(word => {
        let reverseWord = ''
        for (let i = word.length - 1; i >= 0; i--) {
            let letter = word[i]
            reverseWord += letter
        }
        return reverseWord.toLowerCase()
    })
    reversedWords.map((word, i) => {
        if (words[i] === word) result.push(words[i])
    })
    if (result.length > 0) {
        let toCompare = 0
        for (let i = 0; i < result.length; i++) {
            let len = result[i].length
            if (len > toCompare) output = result[i]
            return output
        }
    } else return null
}

console.log(findLargestPalindrome(["racecar", "level", "world", "hello"]))
console.log(findLargestPalindrome(["Platzi", "javascript", "html", "css"]))

